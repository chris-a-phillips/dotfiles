#!/bin/bash
#
# Create new git branch
. _utils

#######################################
# Create new git branch
# Arguments:
#   $1 - Branch name (optional, will prompt if not provided)
# Outputs:
#   Creates and switches to new branch
#######################################

# Function to create branch from default
create_from_default() {
    local branch_name="$1"
    local default_branch=$(get_default_branch)
    echo -e "Creating ${YELLOW}$branch_name${NC} from ${RED}$default_branch${NC}..."
    git checkout "$default_branch" && git pull origin "$default_branch" && git checkout -b "$branch_name"
}

# Function to create branch from current
create_from_current() {
    local branch_name="$1"
    local current=$(get_current_branch)
    echo -e "Creating ${YELLOW}$branch_name${NC} from current branch ${BBLUE}$current${NC}..."
    git checkout -b "$branch_name"
}

# Function to ask user for source branch
ask_for_source() {
    local branch_name="$1"
    local default_branch=$(get_default_branch)
    local current=$(get_current_branch)
    echo -e "Create ${YELLOW}$branch_name${NC} from ${BBLUE}$current (c)${NC} or from ${RED}$default_branch (d)${NC}?"
    read -p "current(c) / $default_branch(d) ?" choice
    case "$choice" in
        c|C) create_from_current "$branch_name" ;;
        d|D) create_from_default "$branch_name" ;;
        *) echo "Invalid choice. Using current branch." && create_from_current "$branch_name" ;;
    esac
}

main() {
    # Check if we're in a git repository
    if ! is_git_repo; then
        error_exit "Not in a git repository"
    fi
    
    local current=$(get_current_branch)
    local branch_name="$1"
    
    # No branch name provided, ask for it
    if [ -z "$branch_name" ]; then
        echo -e "Name of new branch?"
        read branch_name
        
        if [ -z "$branch_name" ]; then
            error_exit "Branch name is required"
        fi
    fi
    
    # If already on default branch, just create from current
    local default_branch=$(get_default_branch)
    if [ "$current" == "$default_branch" ]; then
        create_from_current "$branch_name"
    else
        # Ask user which branch to create from
        ask_for_source "$branch_name"
    fi
    
    print_success "Branch '$branch_name' created and checked out successfully!"
}

main "$@"
