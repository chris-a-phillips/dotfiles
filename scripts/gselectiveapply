#!/bin/bash
#
# Selective apply changes
. _utils

#######################################
# Script to cherry-pick specific changes from your branch while avoiding unwanted changes
# Arguments:
#   $1 - Target branch to apply changes to (e.g., clean develop)
#   $2 - Unwanted branch with changes to avoid (e.g., OC-7091)
# Outputs:
#   Creates a new clean branch with only your changes
#######################################

main() {
    local TARGET_BRANCH="$1"  # Where you want to apply your changes (e.g., clean develop)
    local UNWANTED_BRANCH="$2"  # Branch with unwanted changes (e.g., OC-7091)
    local CURRENT_BRANCH=$(git branch --show-current)
    local BASE_BRANCH="${BASE_BRANCH:-develop}"

    if [ -z "$TARGET_BRANCH" ] || [ -z "$UNWANTED_BRANCH" ]; then
        error_exit "Usage: $0 <target-branch> <unwanted-branch>\nExample: $0 develop OC-7091\nThis will create a new branch from target-branch with only YOUR changes"
    fi

    local NEW_BRANCH="${CURRENT_BRANCH}-clean-$(date +%Y%m%d-%H%M%S)"

    echo "üîß Selective application of changes:"
    echo "   Current branch: $CURRENT_BRANCH"
    echo "   Target branch: $TARGET_BRANCH"
    echo "   Unwanted branch: $UNWANTED_BRANCH"
    echo "   New clean branch: $NEW_BRANCH"
    echo

    # Find files that are only in your branch (not in unwanted branch)
    local YOUR_ONLY_FILES=$(comm -23 <(git diff $BASE_BRANCH --name-only | sort) <(git diff $BASE_BRANCH..$UNWANTED_BRANCH --name-only | sort))
    local COMMON_FILES=$(comm -12 <(git diff $BASE_BRANCH --name-only | sort) <(git diff $BASE_BRANCH..$UNWANTED_BRANCH --name-only | sort))

    echo "üìÅ Files only in your branch (will be copied as-is):"
    if [ -z "$YOUR_ONLY_FILES" ]; then
        echo "   None"
    else
        echo "$YOUR_ONLY_FILES" | sed 's/^/   ‚úÖ /'
    fi

    echo
    echo "üìÅ Files in both branches (need manual review):"
    if [ -z "$COMMON_FILES" ]; then
        echo "   None"
    else
        echo "$COMMON_FILES" | sed 's/^/   ‚ö†Ô∏è  /'
    fi

    echo
    read -p "üöÄ Create clean branch and apply changes? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå Aborted"
        exit 0
    fi

    # Create new branch from target
    echo "üåü Creating new branch '$NEW_BRANCH' from '$TARGET_BRANCH'"
    git checkout -b "$NEW_BRANCH" "$TARGET_BRANCH"

    # Apply files that are only yours
    if [ -n "$YOUR_ONLY_FILES" ]; then
        echo "üì• Copying files that are only in your branch..."
        echo "$YOUR_ONLY_FILES" | while read -r file; do
            if [ -n "$file" ]; then
                echo "   Copying $file"
                git show "$CURRENT_BRANCH:$file" > "$file"
                git add "$file"
            fi
        done
    fi

    # For common files, you'll need to manually review
    if [ -n "$COMMON_FILES" ]; then
        echo
        echo "‚ö†Ô∏è  Common files need manual review:"
        echo "   Use: git show $CURRENT_BRANCH:filename > filename"
        echo "   Then: git diff $UNWANTED_BRANCH:filename filename"
        echo "   To see what to keep vs remove"
        echo
        echo "   Common files:"
        echo "$COMMON_FILES" | sed 's/^/     /'
    fi

    echo
    echo "‚úÖ Clean branch '$NEW_BRANCH' created"
    echo "üîç Review changes and commit when ready"
}

main "$@"
